#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.8.3 on Wed Jul 11 13:08:50 2018
#

import wx
import wx.lib.inspection
import functions
from glob import glob
# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
from wx.lib.agw.thumbnailctrl import ThumbnailCtrl
import wx.lib.agw.thumbnailctrl as TC
import os  # usado no path do dirselect
workinDir = os.getcwd()
# end wxGlade


class main(wx.Frame):
    def __init__(self, *args, **kwds):
        wx.lib.inspection.InspectionTool().Show()

        # begin wxGlade: main.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.notebook = wx.Notebook(self, wx.ID_ANY)
        self.notebook_dir = wx.Panel(self.notebook, wx.ID_ANY)
        self.dirselect = wx.DirPickerCtrl(self.notebook_dir, wx.ID_ANY, path=workinDir)
        self.dirselect.Bind(wx.EVT_DIRPICKER_CHANGED, self.onChangeDir)
        self.thumbs = ThumbnailCtrl(self.notebook_dir, imagehandler=TC.NativeImageHandler)
        self.thumbs.ShowDir(workinDir)
        self.notebook_ConfiguracoesdoOPENCV = wx.Panel(self.notebook, wx.ID_ANY, style=wx.FULL_REPAINT_ON_RESIZE | wx.TAB_TRAVERSAL)
        self.panel_configs = wx.Panel(self.notebook_ConfiguracoesdoOPENCV, wx.ID_ANY)
        self.slider_h = wx.Slider(self.panel_configs, wx.ID_ANY, 0, 0, 179, style=wx.SL_HORIZONTAL | wx.SL_VALUE_LABEL)
        self.slider_s = wx.Slider(self.panel_configs, wx.ID_ANY, 0, 0, 255, style=wx.SL_HORIZONTAL | wx.SL_VALUE_LABEL)
        self.slider_v = wx.Slider(self.panel_configs, wx.ID_ANY, 0, 0, 255, style=wx.SL_HORIZONTAL | wx.SL_VALUE_LABEL)
        self.slider_h1 = wx.Slider(self.panel_configs, wx.ID_ANY, 179, 0, 179, style=wx.SL_HORIZONTAL | wx.SL_VALUE_LABEL)
        self.slider_s1 = wx.Slider(self.panel_configs, wx.ID_ANY, 68, 0, 255, style=wx.SL_HORIZONTAL | wx.SL_VALUE_LABEL)
        self.slider_v1 = wx.Slider(self.panel_configs, wx.ID_ANY, 166, 0, 255, style=wx.SL_HORIZONTAL | wx.SL_VALUE_LABEL)
        self.slider_imagens = wx.Slider(self.panel_configs, wx.ID_ANY, 0, 0, 10, style=wx.SL_HORIZONTAL | wx.SL_LABELS)
        self.panel_original = wx.Panel(self.notebook_ConfiguracoesdoOPENCV, wx.ID_ANY, style=wx.FULL_REPAINT_ON_RESIZE)
        self.panel_threshold = wx.Panel(self.notebook_ConfiguracoesdoOPENCV, wx.ID_ANY, style=wx.FULL_REPAINT_ON_RESIZE)
        self.notebook_teste = wx.Panel(self.notebook, wx.ID_ANY)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_COMMAND_SCROLL, self.slider_image_change, self.slider_h)
        self.Bind(wx.EVT_COMMAND_SCROLL, self.slider_image_change, self.slider_s)
        self.Bind(wx.EVT_COMMAND_SCROLL, self.slider_image_change, self.slider_v)
        self.Bind(wx.EVT_COMMAND_SCROLL, self.slider_image_change, self.slider_h1)
        self.Bind(wx.EVT_COMMAND_SCROLL, self.slider_image_change, self.slider_s1)
        self.Bind(wx.EVT_COMMAND_SCROLL, self.slider_image_change, self.slider_v1)
        self.Bind(wx.EVT_COMMAND_SCROLL, self.slider_image_change, self.slider_imagens)
        self.Bind(wx.EVT_NOTEBOOK_PAGE_CHANGING, self.changing, self.notebook)
        # end wxGlade

    def onChangeDir(self, event):
        global workinDir
        workinDir = self.dirselect.GetPath()
        self.thumbs.ShowDir(workinDir)

    def __set_properties(self):
        # begin wxGlade: main.__set_properties
        self.SetTitle("Classificacao de Cafes")
        _icon = wx.NullIcon
        _icon.CopyFromBitmap(wx.Bitmap("C:\\Users\\Rout\\Documents\\wxpython\\ico.ico", wx.BITMAP_TYPE_ANY))
        self.SetIcon(_icon)
        self.notebook.SetMinSize((895, 500))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: main.__do_layout
        sizer_main = wx.BoxSizer(wx.VERTICAL)
        sizer_config = wx.BoxSizer(wx.VERTICAL)
        sizer_fotos = wx.BoxSizer(wx.HORIZONTAL)
        self.sizer_threshold = wx.StaticBoxSizer(wx.StaticBox(self.notebook_ConfiguracoesdoOPENCV, wx.ID_ANY, "Threshold"), wx.VERTICAL)
        self.sizer_original = wx.StaticBoxSizer(wx.StaticBox(self.notebook_ConfiguracoesdoOPENCV, wx.ID_ANY, "Original"), wx.VERTICAL)
        sizer_configs = wx.BoxSizer(wx.VERTICAL)
        sizer_slider_fotos = wx.StaticBoxSizer(wx.StaticBox(self.panel_configs, wx.ID_ANY, "Fotos"), wx.VERTICAL)
        sizer_limite_inferior = wx.StaticBoxSizer(wx.StaticBox(self.panel_configs, wx.ID_ANY, "Limite superior (h,s,v)"), wx.VERTICAL)
        sizer_h1s1v1 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_limite_superior = wx.StaticBoxSizer(wx.StaticBox(self.panel_configs, wx.ID_ANY, "Limite inferior (h,s,v)"), wx.VERTICAL)
        sizer_hsv = wx.BoxSizer(wx.HORIZONTAL)
        sizer_dir = wx.BoxSizer(wx.VERTICAL)
        sizer_dir.Add(self.dirselect, 0, wx.ALL | wx.EXPAND, 0)
        sizer_dir.Add(self.thumbs, 0, wx.ALL | wx.EXPAND, 0)
        self.notebook_dir.SetSizer(sizer_dir)
        sizer_hsv.Add(self.slider_h, 1, 0, 0)
        sizer_hsv.Add(self.slider_s, 1, 0, 0)
        sizer_hsv.Add(self.slider_v, 1, 0, 0)
        sizer_limite_superior.Add(sizer_hsv, 1, wx.EXPAND, 0)
        sizer_configs.Add(sizer_limite_superior, 1, wx.EXPAND, 0)
        sizer_h1s1v1.Add(self.slider_h1, 1, wx.EXPAND, 0)
        sizer_h1s1v1.Add(self.slider_s1, 1, wx.EXPAND, 0)
        sizer_h1s1v1.Add(self.slider_v1, 1, wx.EXPAND, 0)
        sizer_limite_inferior.Add(sizer_h1s1v1, 1, wx.EXPAND, 0)
        sizer_configs.Add(sizer_limite_inferior, 1, wx.EXPAND, 0)
        sizer_slider_fotos.Add(self.slider_imagens, 0, wx.EXPAND, 0)
        sizer_configs.Add(sizer_slider_fotos, 1, wx.EXPAND, 0)
        self.panel_configs.SetSizer(sizer_configs)
        sizer_config.Add(self.panel_configs, 1, wx.EXPAND, 0)
        self.sizer_original.Add(self.panel_original, 1, wx.ALL | wx.EXPAND, 2)
        sizer_fotos.Add(self.sizer_original, 1, wx.ALIGN_CENTER | wx.ALL | wx.EXPAND, 0)
        self.sizer_threshold.Add(self.panel_threshold, 1, wx.ALL | wx.EXPAND, 2)
        sizer_fotos.Add(self.sizer_threshold, 1, wx.ALIGN_CENTER | wx.EXPAND, 0)
        sizer_config.Add(sizer_fotos, 2, wx.EXPAND, 0)
        self.notebook_ConfiguracoesdoOPENCV.SetSizer(sizer_config)
        self.notebook.AddPage(self.notebook_dir, "Diretorio de trabalho")
        self.notebook.AddPage(self.notebook_ConfiguracoesdoOPENCV, "Configuracoes do OPENCV")
        self.notebook.AddPage(self.notebook_teste, "teste")
        sizer_main.Add(self.notebook, 1, wx.ALIGN_CENTER | wx.ALL | wx.EXPAND, 0)
        self.SetSizer(sizer_main)
        sizer_main.Fit(self)
        self.Layout()
        # end wxGlade
        bitmap_1 = wx.StaticBitmap(self.panel_original,
                                   wx.ID_ANY, 
                                   wx.Bitmap(
                                        "C:\\Users\\Rout\\Documents\\wxpython\\img.ico",
                                    wx.BITMAP_TYPE_ANY))
        bitmap_2 = wx.StaticBitmap(self.panel_threshold,
                                   wx.ID_ANY, wx.Bitmap(
                                       "C:\\Users\\Rout\\Documents\\wxpython\\img.ico",
                                       wx.BITMAP_TYPE_ANY))

    def slider_image_change(self, event):  # wxGlade: main.<event_handler>

        id = self.slider_imagens.GetValue()
        path = globs[id]

        for child in self.panel_original.GetChildren():
            child.Destroy()
        wx.StaticBitmap(self.panel_original, wx.ID_ANY, functions.genImage(
            path, *self.sizer_original.GetSize()))

        for child in self.panel_threshold.GetChildren():
            child.Destroy()
        conf = [
            self.slider_h.GetValue(), self.slider_s.GetValue(),
            self.slider_v.GetValue(), self.slider_h1.GetValue(),
            self.slider_s1.GetValue(), self.slider_v1.GetValue()
        ]

        wx.StaticBitmap(self.panel_threshold, wx.ID_ANY, functions.threshold(
            path, size=self.sizer_threshold.GetSize(), hsv=conf))

    def changing(self, event):  # wxGlade: main.<event_handler>
        global globs
        globs = glob(workinDir + "/*.jpg")

        if(len(globs) > 1):
            self.slider_imagens.SetValue(0)
            self.slider_imagens.SetMax(len(globs) - 1)
            self.slider_imagens.Enable(True)
            self.slider_image_change([])
        else:
            self.slider_imagens.Enable(False)
            self.slider_imagens.SetValue(0)
            self.slider_imagens.SetMax(1)
            for child in self.panel_original.GetChildren():
                child.Destroy()
            for child in self.panel_threshold.GetChildren():
                child.Destroy()
            wx.StaticBitmap(self.panel_original, wx.ID_ANY, wx.Bitmap(
                "C:\\Users\\Rout\\Documents\\wxpython\\img.ico", wx.BITMAP_TYPE_ANY))
            wx.StaticBitmap(self.panel_threshold, wx.ID_ANY, wx.Bitmap(
                "C:\\Users\\Rout\\Documents\\wxpython\\img.ico", wx.BITMAP_TYPE_ANY))

# end of class main


class MyApp(wx.App):
    def OnInit(self):
        self.frame = main(None, wx.ID_ANY, "")
        self.SetTopWindow(self.frame)
        self.frame.Show()
        return True

# end of class MyApp


if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()
